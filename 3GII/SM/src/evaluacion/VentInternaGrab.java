package evaluacion;

import utilidad.Grabador;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;

/**
 * Ventana interna de captura de audio.
 *
 * @author German Martinez Maldonado
 */
public class VentInternaGrab extends javax.swing.JInternalFrame {

    private static VentInternaGrab instancia = null;
    private Grabador grabador;

    /**
     * Obtiene la única instancia posible de la ventana de grabación.
     *
     * @return Instancia de la ventana de grabación.
     */
    public static VentInternaGrab getInstance() {
        if (instancia == null) {
            instancia = new VentInternaGrab();
        }

        return instancia;
    }

    /**
     * Constructor de la ventana interna de captura de audio.
     */
    private VentInternaGrab() {
        initComponents();

        grabador = new Grabador();

        botonStop.setEnabled(false);
    }

    /**
     * Devuelve el grabador de audio de la ventana interna.
     * @return Grabador de audio.
     */
    public Grabador getGrabador(){
        return grabador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoGrabacion = new javax.swing.ButtonGroup();
        botonRec = new javax.swing.JToggleButton();
        botonStop = new javax.swing.JToggleButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Grabación");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                VentanaInternaGrabacionClosing(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        grupoGrabacion.add(botonRec);
        botonRec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/RecordPressed.png"))); // NOI18N
        botonRec.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/RecordDisabled.png"))); // NOI18N
        botonRec.setMaximumSize(new java.awt.Dimension(120, 100));
        botonRec.setMinimumSize(new java.awt.Dimension(120, 100));
        botonRec.setPreferredSize(new java.awt.Dimension(120, 100));
        botonRec.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/RecordPressed.png"))); // NOI18N
        botonRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRecActionPerformed(evt);
            }
        });
        getContentPane().add(botonRec);

        grupoGrabacion.add(botonStop);
        botonStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/StopNormalRed.png"))); // NOI18N
        botonStop.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/StopDisabled.png"))); // NOI18N
        botonStop.setMaximumSize(new java.awt.Dimension(120, 100));
        botonStop.setMinimumSize(new java.awt.Dimension(120, 100));
        botonStop.setPreferredSize(new java.awt.Dimension(120, 100));
        botonStop.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/StopNormalRed.png"))); // NOI18N
        botonStop.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/StopPessedBlue.png"))); // NOI18N
        botonStop.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/StopPessedBlue.png"))); // NOI18N
        botonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonStopActionPerformed(evt);
            }
        });
        getContentPane().add(botonStop);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción correspondiente a la botón de grabación. Inicia la captura de
     * sonido de la línea de audio.
     *
     * @param evt Evento que produce el inicio de la acción (botón pulsado).
     * @see utilidad.Grabador#record() Método que se encarga de realizar la
     * grabación.
     */
    private void botonRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecActionPerformed
        if (grabador != null) {
            grabador.record();
            botonRec.setEnabled(false);
            botonStop.setEnabled(true);
        }
    }//GEN-LAST:event_botonRecActionPerformed

    /**
     * Acción correspondiente a la botón de stop. Detiene la grabación y guarda
     * la misma en un archivo.
     *
     * @param evt Evento que produce el inicio de la acción (botón pulsado).
     * @see utilidad.Grabador#record() Método que se encarga de finalizar y
     * guardar la grabación.
     */
    private void botonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonStopActionPerformed
        if (grabador != null) {
            grabador.stop();
            botonRec.setEnabled(true);
            botonStop.setEnabled(false);
        }
    }//GEN-LAST:event_botonStopActionPerformed

    /**
     * Acción correspondiente a cerrar la ventana de grabación. Destruye la
     * ventana de grabación de sonido actual.
     *
     * @param evt Evento que produce el inicio de la acción (cierre de ventana
     * interna).
     */
    private void VentanaInternaGrabacionClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_VentanaInternaGrabacionClosing
        instancia = null;
    }//GEN-LAST:event_VentanaInternaGrabacionClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonRec;
    private javax.swing.JToggleButton botonStop;
    private javax.swing.ButtonGroup grupoGrabacion;
    // End of variables declaration//GEN-END:variables
}
